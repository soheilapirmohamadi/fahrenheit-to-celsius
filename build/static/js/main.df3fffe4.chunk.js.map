{"version":3,"sources":["Farens.js","TryCovert.js","index.js"],"names":["scales","f","c","Farens","props","handelchange","event","target","value","id","this","type","style","display","justifyContent","temprecher","onChange","React","Component","toFahrenheit","celsius","toCelsius","fahrenheit","tryConvert","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","S","handelchangeCelsius","temp","setState","scale","handelchangeFahrenheit","state","Celsius","MyFunc","Fahrenheit","className","class","render","document","querySelector"],"mappings":"uLACMA,EAAQ,CACZC,EAAE,aACFC,EAAE,WAsBWC,E,kDAnBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEVC,aAAa,SAACC,GAClB,EAAKF,MAAMC,aAAaC,EAAMC,OAAOC,QAJd,E,0CAMjB,WACE,OACE,gCACE,wBAAQC,GAAG,MAAX,UAAkBT,EAAOU,KAAKN,MAAMO,MAApC,OACA,qBAAKC,MAAO,CAACC,QAAQ,OAAOC,eAAe,UAA3C,SACA,uBAAOL,GAAG,KAAKD,MAAOE,KAAKN,MAAMW,WAAYC,SAAUN,KAAKL,aAAcM,KAAK,kB,GAZtEM,IAAMC,W,MCDpB,SAASC,EAAaC,GAC3B,OAAkB,EAAVA,EAAc,EAAK,GAGtB,SAASC,EAAUC,GACtB,OAA2B,GAAnBA,EAAa,IAAU,EAG5B,SAASC,EAAWpB,EAAQqB,GAC/B,IAAMC,EAAQC,WAAWvB,GACzB,GAAIwB,OAAOC,MAAMH,GACf,MAAO,GAET,IAAMI,EAASL,EAAQC,GAEvB,OADgBK,KAAKC,MAAe,IAATF,GAAiB,KAC7BG,W,ICbbC,E,kDACJ,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IAMR8B,oBAAuB,SAACC,GACtB,EAAKC,SAAS,CACZC,MAAO,IACPF,KAAMA,KAVS,EAanBG,uBAAyB,SAACH,GACxB,EAAKC,SAAS,CACZC,MAAO,IACPF,KAAMA,KAdR,EAAKI,MAAQ,CACXF,MAAO,IACPF,KAAM,IAJS,E,0CAmBnB,WACE,IAAMK,EAA+B,KAApB9B,KAAK6B,MAAMF,MAAeI,EAAkB/B,KAAK6B,MAAMJ,KAAMM,GAAqB/B,KAAK6B,MAAMJ,KACvGO,EAAiC,KAApBhC,KAAK6B,MAAMF,MAAeI,EAAkB/B,KAAK6B,MAAMJ,KAAMM,GAAuB/B,KAAK6B,MAAMJ,KAEnH,OACE,sBAAKQ,UAAU,OAAf,UACE,oBAAIlC,GAAG,KAAP,kDAEA,cAAC,EAAD,CAAQM,WAAY2B,EAAY/B,KAAK,IAAIN,aAAcK,KAAK4B,yBAE3D,mBAAG7B,GAAG,KAAKmC,MAAM,oBAElB,cAAC,EAAD,CAAQ7B,WAAYyB,EAAU7B,KAAK,IAAIN,aAAcK,KAAKwB,sBAC1D,uBACA,8B,GAlCQjB,IAAMC,WAuCtB2B,iBAAO,cAAC,EAAD,IAAOC,SAASC,cAAc,Y","file":"static/js/main.df3fffe4.chunk.js","sourcesContent":["import React  from \"react\";\r\nconst scales ={\r\n  f:\"Fahrenheit\",\r\n  c:\"Celsius\"\r\n}\r\nclass Farens extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n    handelchange=(event)=>{\r\nthis.props.handelchange(event.target.value);\r\n    }\r\n      render() {\r\n        return (\r\n          <div>\r\n            <label  id=\"lab\">{scales[this.props.type]}:</label>\r\n            <div style={{display:\"flex\",justifyContent:\"center\"}}>\r\n            <input id=\"in\" value={this.props.temprecher} onChange={this.handelchange} type=\"text\"/>\r\n            </div>\r\n          </div >\r\n        );\r\n      }  \r\n}\r\n    \r\n\r\nexport default Farens;","import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\n// import Farens from \"./Farens\";\r\n\r\nexport function toFahrenheit(celsius) {\r\n  return (celsius * 9 / 5) + 32;\r\n}\r\n\r\nexport function toCelsius(fahrenheit) {\r\n    return (fahrenheit - 32) * 5 / 9;\r\n  }\r\n\r\nexport function tryConvert(Farens, convert) {\r\n    const input = parseFloat(Farens);\r\n    if (Number.isNaN(input)) {\r\n      return '';\r\n    }\r\n    const output = convert(input);\r\n    const rounded = Math.round(output * 1000) / 1000;\r\n    return rounded.toString();\r\n  }","import React from 'react';\nimport { render } from 'react-dom';\nimport Farens from './Farens';\nimport styles from './Stylem.css';\nimport *as  MyFunc from './TryCovert';\n\nclass S extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      scale: \"c\",\n      temp: '',\n    }\n  }\n  handelchangeCelsius  = (temp) => {\n    this.setState({\n      scale: \"c\",\n      temp: temp\n    })\n  }\n  handelchangeFahrenheit = (temp) => {\n    this.setState({\n      scale: \"f\",\n      temp: temp\n    })\n  }\n  render() {\n    const Celsius  = this.state.scale == \"f\" ? MyFunc.tryConvert(this.state.temp, MyFunc.toCelsius ) : this.state.temp\n    const  Fahrenheit = this.state.scale == \"c\" ? MyFunc.tryConvert(this.state.temp, MyFunc.toFahrenheit) : this.state.temp\n\n    return (\n      <div className=\"card\">\n        <h1 id=\"h1\">Celsius to Fahrenheit and vice versa</h1>\n\n        <Farens temprecher={Fahrenheit} type=\"f\" handelchange={this.handelchangeFahrenheit} />\n\n        {<i id=\"ic\" class='fas fa-sync-alt' ></i>}\n\n        <Farens temprecher={Celsius } type=\"c\" handelchange={this.handelchangeCelsius } />\n        <br />\n        <br />\n      </div>\n    )\n  }\n}\nrender(<S />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}